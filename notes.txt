#sample database
CREATE TABLE testDB.dbo.customers (
	id int IDENTITY(1001,1) NOT NULL,
	first_name varchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	last_name varchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	email varchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	middle_name varchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT PK__customer__3213E83FC8C450D3 PRIMARY KEY (id),
	CONSTRAINT UQ__customer__AB6E61641776D368 UNIQUE (email)
) GO
CREATE UNIQUE NONCLUSTERED INDEX UQ__customer__AB6E61641776D368 ON testDB.dbo.customers (email) GO;


#Pull docker image
docker pull mcr.microsoft.com/mssql/server:2017-latest

#Run docker container
docker run -e 'ACCEPT_EULA=Y' -e 'MSSQL_AGENT_ENABLED=true' \
-e 'MSSQL_PID=Standard' -e 'SA_PASSWORD=Password!' \
-p 9999:1433 --name sqlserver_2 \
-d mcr.microsoft.com/mssql/server:2017-latest


#Log into container to get your SQL Server command prompt
docker exec -it sqlserver_2 bash -c '/opt/mssql-tools/bin/sqlcmd -U sa -P Password!'

#update cdc tables after change
USE testDB
GO
EXEC sys.sp_cdc_enable_table @capture_instance = N'dbo_customers2', @source_schema = N'dbo', @source_name = N'customers', @role_name = N'MyRole', @supports_net_changes = 1
GO;

#disable cdc old instance after changes
USE testDB
GO
EXEC sys.sp_cdc_disable_table @capture_instance = N'dbo_customers',@source_schema = N'dbo', @source_name = N'customers'
GO;

# demo changes for mysql
INSERT INTO inventory.customers
(first_name, last_name, middle_name, email)
VALUES('', '','', '');

ALTER table inventory.customers 
add middle_name varchar(255);

#get docker logs
docker logs -f connect > connect-log.txt
docker logs -f broker > broker-log.txt


#internal docker Network
gateway.docker.internal
host.docker.internal

#remvoed from config file
"transforms": "flatten",

"transforms.flatten.delimiter": ".",
"transforms.flatten.type": "org.apache.kafka.connect.transforms.Flatten$Value",